{"version":3,"sources":["webpack://react-playground/./src/app/router/router.ts","webpack://react-playground/./src/app/router/router.types.ts","webpack://react-playground/./src/modules/github/ui/github-user-card/github-user.card.tsx","webpack://react-playground/./src/common/redux/action-utils.ts","webpack://react-playground/./src/modules/github/pages/github-profile-page/state/github-profile.actions.ts","webpack://react-playground/./src/common/redux/reducer-utils.ts","webpack://react-playground/./src/modules/github/pages/github-profile-page/state/github-profile.reducer.ts","webpack://react-playground/./src/modules/github/pages/github-profile-page/github-profile-page.tsx","webpack://react-playground/./src/modules/auth/model/auth.selectors.ts","webpack://react-playground/./src/modules/auth/model/auth.actions.ts","webpack://react-playground/./src/modules/auth/ui/auth-form/auth-form.tsx","webpack://react-playground/./src/modules/user/pages/users-list-page/state/users-list.actions.ts","webpack://react-playground/./src/modules/user/pages/users-list-page/state/users-list.selectors.ts","webpack://react-playground/./src/app/main-layout/main-layout.tsx","webpack://react-playground/./src/modules/user/pages/users-list-page/users-list-page.tsx","webpack://react-playground/./src/common/http/http-client.types.ts","webpack://react-playground/./src/common/http/query-string.ts","webpack://react-playground/./src/common/http/http-error.ts","webpack://react-playground/./src/api/common/http-backend.ts","webpack://react-playground/./src/common/http/http-client.ts","webpack://react-playground/./src/common/utils/pick.ts","webpack://react-playground/./src/api/github/github-api.client.ts","webpack://react-playground/./src/modules/auth/model/auth.reducer.ts","webpack://react-playground/./src/common/api/api-utils.ts","webpack://react-playground/./src/api/pizza-store/common/api-client-backend.ts","webpack://react-playground/./src/modules/auth/model/auth.epics.ts","webpack://react-playground/./src/modules/user/pages/users-list-page/state/users-list.reducer.ts","webpack://react-playground/./src/api/pizza-store/common/api-mappers.ts","webpack://react-playground/./src/api/pizza-store/common/api-client.ts","webpack://react-playground/./src/api/pizza-store/user/user-client.ts","webpack://react-playground/./src/app/app-store.ts","webpack://react-playground/./src/common/redux/store-utils.ts","webpack://react-playground/./src/modules/github/pages/github-profile-page/state/github-profile.epics.ts","webpack://react-playground/./src/modules/user/pages/users-list-page/state/users-list.epics.ts","webpack://react-playground/./src/index.tsx","webpack://react-playground/./src/app/app.tsx","webpack://react-playground/webpack/bootstrap","webpack://react-playground/webpack/runtime/define property getters","webpack://react-playground/webpack/runtime/global","webpack://react-playground/webpack/runtime/harmony module decorator","webpack://react-playground/webpack/runtime/hasOwnProperty shorthand","webpack://react-playground/webpack/runtime/jsonp chunk loading","webpack://react-playground/webpack/startup"],"names":["routes","name","path","APP_FEATURE_ROUTE_NAMES","GithubUserCard","props","user","login","src","avatar_url","JSON","stringify","action","type","withNoPayload","payload","withPayload","githubProfileActions","loadStart","loadSuccess","loadError","storeSlice","key","initialState","withReducer","reducer","s","a","githubProfileReducerSlice","username","userDto","isLoading","error","state","selectGithubUserDto","githubProfile","selectApiToken","auth","apiToken","selectIsLoggedIn","authActions","logout","AuthForm","value","setValue","useState","dispatch","onSubmit","e","preventDefault","placeholder","onChange","target","required","href","rel","usersListActions","selectUsersListState","usersList","FEATURE_PAGES_CONFIG_BY_ID","PageComponent","useEffect","users","isLoggedIn","toString","home","MainLayout","routeName","route","config","className","map","FETCH_RESPONSE_USEFUL_KEYS","queryPart","serializer","serialized","serializeBoolean","serializeNumber","serializeJson","serializeValue","encodeURIComponent","DEFAULT_SERIALIZER","HttpError","Error","response","super","httpBackend","configOverrides","this","defaultConfig","url","query","queryParams","params","parts","add","push","Object","keys","forEach","Array","isArray","arrValue","join","queryString","querySerializer","method","pipe","switchMap","handleFetchResponse","fetchResponse","respPartial","obj","reduce","result","ok","body","data","json","resp","status","githubApiClient","authReducerSlice","REDUNDANT_SLASH_RE","apiClientBackend","options","token","request","urlParts","replaceAll","apiUrl","endpoint","endpointTemplate","replace","usersListReducerSlice","responseToBody","ApiClient","id","resourceUrl","userClient","client","search","appStore","reducers","epics","action$","handleAuthChanges$","updateToken","restoreAuthToken$","merge","limit","page","orderBy","sortBy","enabledDevTools","epicMiddleware","createEpicMiddleware","enhancer","store","run","combineEpics","router","usePlugin","useHash","createAppRouter","start","document","getElementById","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","loaded","__webpack_modules__","m","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","hmd","create","children","set","prop","prototype","hasOwnProperty","call","installedChunks","826","deferredModules","checkDeferredModules","checkDeferredModulesImpl","i","length","deferredModule","fulfilled","j","depId","splice","x","chunkLoadingGlobal","slice","webpackJsonpCallback","chunkId","chunkIds","moreModules","runtime","executeModules","resolves","parentChunkLoadingFunction","shift","apply","self","bind"],"mappings":"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","file":"index.e72e9bdc8e94ab5cf498.js","sourcesContent":["import createRouter from 'router5'\nimport browserPlugin from 'router5-plugin-browser'\n\nimport { useRoute } from 'react-router5'\nimport { AppRoute, AppRouter, AppRouteContext } from './router.types'\n\nexport const routes: AppRoute[] = [\n    {\n        name: 'home',\n        path: '/',\n    },\n    {\n        name: 'users',\n        path: '/users',\n    },\n    {\n        name: 'github-profile',\n        path: '/github-profile',\n    },\n]\n\nexport function createAppRouter(): AppRouter {\n    const router = createRouter(routes)\n    router.usePlugin(\n        browserPlugin({\n            useHash: true,\n        })\n    )\n    return router\n}\n\nexport const useAppRoute = () => {\n    return useRoute() as AppRouteContext\n}\n","import { TypedRouter, TypedRoute, TypedRouteContext } from 'common/router5/router5-toolkit.types'\nimport { Values } from 'common/types/values.type'\n\nexport const APP_FEATURE_ROUTE_NAMES = ['github-profile', 'users'] as const\nexport const APP_AUX_ROUTE_NAMES = ['home'] as const\n\nexport type AppFeatureRouteName = Values<typeof APP_FEATURE_ROUTE_NAMES>\nexport type AppRouteName = Values<typeof APP_AUX_ROUTE_NAMES> | AppFeatureRouteName\n\nexport type AppRouter = TypedRouter<AppRouteName>\nexport type AppRoute = TypedRoute<AppRouteName>\nexport type AppRouteContext = TypedRouteContext<AppRouteName>\n","import React from 'react'\nimport { GithubUserDto } from 'api/github/github-api.types'\n\ninterface GithubProfileCardProps {\n    user: GithubUserDto\n}\nexport const GithubUserCard: React.FC<GithubProfileCardProps> = props => {\n    const user = props.user\n    return (\n        <>\n            <h3>{user.login}</h3>\n            <img src={user.avatar_url} />\n            <pre>{JSON.stringify(user, null, 4)}</pre>\n        </>\n    )\n}\n","import { Action } from 'redux'\n\nexport type ActionsUnion<\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- quick fix to make TS happy\n    T extends Record<string, ActionCreator<string, any>>\n> = ReturnType<T[keyof T]>\n\ninterface StrictAction<T extends string, P = null> extends Action<T> {\n    payload: P\n}\n\ntype ActionCreator<T extends string, P> = P extends null\n    ? () => { type: T; payload: null }\n    : (p: P) => StrictAction<T, P>\n\nexport const action = <T extends string>(type: T) => {\n    return {\n        withNoPayload: () => {\n            return () => {\n                return { type, payload: null }\n            }\n        },\n        withPayload: <P = never>() => {\n            return (payload: P) => {\n                return { type, payload }\n            }\n        },\n    }\n}\n","import { GithubUserDto } from 'api/github/github-api.types'\nimport { action, ActionsUnion } from 'common/redux/action-utils'\n\nexport const githubProfileActions = {\n    loadStart: action('@githubProfile.loadStart').withPayload<{\n        username: string\n    }>(),\n    loadSuccess: action('@githubProfile.loadSuccess').withPayload<GithubUserDto>(),\n    loadError: action('@githubProfile.loadError').withPayload<object>(),\n}\n\nexport type GithubProfileAction = ActionsUnion<typeof githubProfileActions>\n","type ReducerSlice<S extends Record<string, unknown>, A> = {\n    [Key in keyof S]: (s: Readonly<S[Key]>, a: A) => S[Key]\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any -- quick fix to make TS happy\nexport type StateSlice<RS extends Record<string, (...args: any[]) => any>> = {\n    [K in keyof RS]: ReturnType<RS[K]>\n}\n\nexport const storeSlice = <K extends string, S>(key: K, initialState: Readonly<S>) => {\n    return {\n        withReducer: <A>(reducer: (s: Readonly<S>, a: A) => Readonly<S>) => {\n            return {\n                [key]: (s: S, a: A) => reducer(s || initialState, a),\n            } as ReducerSlice<Record<K, S>, A>\n        },\n    }\n}\n","import { GithubUserDto } from 'api/github/github-api.types'\nimport { StateSlice, storeSlice } from 'common/redux/reducer-utils'\nimport { shouldNeverBeCalled } from 'common/utils/misc'\nimport { GithubProfileAction } from './github-profile.actions'\n\nexport const DEFAULT_GITHUB_USERNAME = 'rodmax'\nexport interface GithubProfileState {\n    username: string\n    userDto: GithubUserDto | null\n    isLoading: boolean\n    error: unknown\n}\n\nconst initialState: GithubProfileState = {\n    username: '',\n    userDto: null,\n    isLoading: false,\n    error: null,\n}\n\nexport type GithubProfileStateSlice = StateSlice<typeof githubProfileReducerSlice>\n\nexport const githubProfileReducerSlice = storeSlice('githubProfile', initialState).withReducer(\n    (state, action: GithubProfileAction) => {\n        switch (action.type) {\n            case '@githubProfile.loadStart':\n                return {\n                    ...state,\n                    username: action.payload.username,\n                    isLoading: true,\n                }\n\n            case '@githubProfile.loadSuccess':\n                return { ...state, isLoading: false, userDto: action.payload }\n\n            case '@githubProfile.loadError':\n                return { ...state, isLoading: false, error: action.payload }\n\n            default:\n                shouldNeverBeCalled(action)\n        }\n        return state\n    }\n)\n","import { GithubUserCard } from 'modules/github/ui/github-user-card/github-user.card'\nimport React, { Dispatch, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { GithubProfileAction, githubProfileActions } from './state/github-profile.actions'\nimport { DEFAULT_GITHUB_USERNAME, GithubProfileStateSlice } from './state/github-profile.reducer'\n\nexport const GithubProfilePage: React.FC = () => {\n    const userDto = useSelector(selectGithubUserDto)\n    const dispatch = useDispatch<Dispatch<GithubProfileAction>>()\n\n    useEffect(() => {\n        dispatch(githubProfileActions.loadStart({ username: DEFAULT_GITHUB_USERNAME }))\n    }, [dispatch])\n\n    if (!userDto) {\n        return <h4>Loading...</h4>\n    }\n\n    return (\n        <>\n            <h2>Github profile</h2>\n            <GithubUserCard user={userDto}></GithubUserCard>\n        </>\n    )\n}\n\nconst selectGithubUserDto = (state: GithubProfileStateSlice) => state.githubProfile.userDto\n","import { AuthStateSlice } from './auth.reducer'\n\nexport const selectApiToken = (state: AuthStateSlice) => state.auth.apiToken\n\nexport const selectIsLoggedIn = (state: AuthStateSlice) => !!state.auth.apiToken\n","import { action, ActionsUnion } from 'common/redux/action-utils'\n\nexport const authActions = {\n    login: action('@auth.login').withPayload<{\n        apiToken: string\n    }>(),\n    logout: action('@auth.logout').withNoPayload(),\n}\n\nexport type AuthAction = ActionsUnion<typeof authActions>\n","import { AuthAction, authActions } from 'modules/auth/model/auth.actions'\nimport { selectApiToken } from 'modules/auth/model/auth.selectors'\nimport React, { Dispatch, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport const AuthForm: React.FC = () => {\n    const apiToken = useSelector(selectApiToken)\n    const [value, setValue] = useState(apiToken)\n    const dispatch = useDispatch<Dispatch<AuthAction>>()\n\n    return (\n        <form\n            onSubmit={e => {\n                e.preventDefault()\n                dispatch(authActions.login({ apiToken: value }))\n            }}\n        >\n            <input\n                value={value}\n                placeholder='api token'\n                onChange={e => setValue(e.target.value)}\n                required\n                name='apiToken'\n            />\n            <div>\n                <a href='https://mockapi.io' rel='noreferrer' target='_blank'>\n                    Api token from mockapi.io\n                </a>\n            </div>\n        </form>\n    )\n}\n","import { ApiListDto } from 'api/pizza-store/common/api.types'\nimport { UserDto } from 'api/pizza-store/user/user-client.types'\nimport { action, ActionsUnion } from 'common/redux/action-utils'\n\nexport const usersListActions = {\n    loadStart: action('@usersList.loadStart').withNoPayload(),\n    loadSuccess: action('@usersList.loadSuccess').withPayload<ApiListDto<UserDto>>(),\n    loadError: action('@usersList.loadError').withPayload<object>(),\n}\n\nexport type UsersListAction = ActionsUnion<typeof usersListActions>\n","import { UsersListStateSlice } from './users-list.reducer'\n\nexport const selectUsersListState = (state: UsersListStateSlice) => state.usersList\n","import React from 'react'\nimport { useAppRoute } from '../router/router'\nimport { AppRouteName, APP_FEATURE_ROUTE_NAMES } from '../router/router.types'\nimport { GithubProfilePage } from 'modules/github/pages/github-profile-page/github-profile-page'\nimport './main-layout.scss'\nimport { Link } from 'react-router5'\nimport { UsersListPage } from 'modules/user/pages/users-list-page/users-list-page'\n\ninterface PageConfig {\n    PageComponent: React.ComponentType\n}\n\nconst HomePage = () => <>Default page</>\n\nconst FEATURE_PAGES_CONFIG_BY_ID: Record<AppRouteName, PageConfig> = {\n    'github-profile': {\n        PageComponent: GithubProfilePage,\n    },\n    users: {\n        PageComponent: UsersListPage,\n    },\n    home: {\n        PageComponent: HomePage,\n    },\n}\n\nexport const MainLayout: React.FC = () => {\n    const routeName = useAppRoute().route.name\n    const config = FEATURE_PAGES_CONFIG_BY_ID[routeName]\n\n    return (\n        <main className='c-main-layout g-layout'>\n            <aside className='c-main-layout__sidebar g-layout__fixed u-pad-24'>\n                {APP_FEATURE_ROUTE_NAMES.map(name => {\n                    return (\n                        <Link key={name} className='c-main-layout__nav-link' routeName={name}>\n                            {name}\n                        </Link>\n                    )\n                })}\n            </aside>\n            <section className='g-layout__growable mod-scrollable'>\n                {<config.PageComponent></config.PageComponent>}\n            </section>\n        </main>\n    )\n}\n","import { selectIsLoggedIn } from 'modules/auth/model/auth.selectors'\nimport { AuthForm } from 'modules/auth/ui/auth-form/auth-form'\nimport React, { Dispatch, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { UsersListAction, usersListActions } from './state/users-list.actions'\nimport { selectUsersListState } from './state/users-list.selectors'\n\nexport const UsersListPage: React.FC = () => {\n    const isLoggedIn = useSelector(selectIsLoggedIn)\n    const state = useSelector(selectUsersListState)\n    const dispatch = useDispatch<Dispatch<UsersListAction>>()\n    useEffect(() => {\n        if (isLoggedIn) {\n            dispatch(usersListActions.loadStart())\n        }\n    }, [dispatch, isLoggedIn])\n\n    return (\n        <div>\n            <AuthForm />\n            <section>isLoggedIn: {isLoggedIn.toString()}</section>\n            <pre>{JSON.stringify(state, null, 2)}</pre>\n        </div>\n    )\n}\n","export type HttpMethod = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\nexport interface HttpRequestConfig {\n    url: string\n    method: HttpMethod\n    queryParams?: object\n    body?: object\n}\n\nexport interface HttpResponse<Dto> extends HttpFetchResponsePartial {\n    body: Dto // loaded data from response.json()\n    fetchResponse: Response | null\n}\n\nexport const FETCH_RESPONSE_USEFUL_KEYS = ['status', 'statusText', 'type', 'ok'] as const\n\nexport type HttpFetchResponsePartial = Pick<Response, typeof FETCH_RESPONSE_USEFUL_KEYS[number]>\n","type PrimitiveValue = string | number | boolean | undefined | null\n\nexport type QueryParams<K extends string = string> = Record<\n    K,\n    PrimitiveValue | PrimitiveValue[] | object\n>\n\nexport function queryString<K extends string = string>(\n    params: QueryParams<K>,\n    serializer: QueryValuesSerializer = DEFAULT_SERIALIZER\n): string {\n    const parts: Array<string | null> = []\n    const add = (s: string | null) => s && parts.push(s)\n\n    Object.keys(params).forEach(key => {\n        const value = params[key as K]\n        if (Array.isArray(value)) {\n            value.forEach(arrValue => {\n                add(queryPart(key, arrValue, serializer))\n            })\n            return\n        }\n        add(queryPart(key, value, serializer))\n    })\n    return parts.join('&')\n}\n\nfunction queryPart(\n    key: string,\n    value: PrimitiveValue | object,\n    serializer: QueryValuesSerializer\n): string | null {\n    const serialized = serializeValue(value, serializer)\n    if (!serialized) {\n        return null\n    }\n    return `${encodeURIComponent(key)}=${encodeURIComponent(serialized)}`\n}\n\nfunction serializeValue(\n    value: PrimitiveValue | object,\n    serializer: QueryValuesSerializer\n): string | null {\n    if (value === null || value === undefined || value === '') {\n        return null\n    }\n    switch (typeof value) {\n        case 'boolean':\n            return serializer.serializeBoolean(value)\n        case 'number':\n            return serializer.serializeNumber(value)\n        case 'string':\n            return value\n        case 'object':\n            return serializer.serializeJson(value)\n        default:\n            return (value as object).toString()\n    }\n}\n\nexport type QueryValuesSerializer = typeof DEFAULT_SERIALIZER\n\nexport const DEFAULT_SERIALIZER = {\n    serializeBoolean: (value: boolean) => value.toString(),\n    serializeNumber: (value: number) => value.toString(),\n    serializeJson: (value: object) => JSON.stringify(value),\n} as const\n","import { HttpRequestConfig, HttpResponse } from './http-client.types'\n\nexport class HttpError<E = unknown> extends Error {\n    constructor(\n        public readonly config: HttpRequestConfig,\n        public readonly response: HttpResponse<E>\n    ) {\n        super('http client error')\n    }\n}\n","import { HttpClient } from 'common/http/http-client'\n\nexport const httpBackend = new HttpClient()\n","import { FETCH_RESPONSE_USEFUL_KEYS, HttpRequestConfig, HttpResponse } from './http-client.types'\nimport { fromFetch } from 'rxjs/fetch'\nimport { switchMap } from 'rxjs/operators'\nimport { DEFAULT_SERIALIZER, queryString, QueryValuesSerializer } from './query-string'\nimport { HttpError } from './http-error'\nimport { Observable } from 'rxjs'\nimport { pick } from 'common/utils/pick'\n\nexport interface HttpClientConfig {\n    querySerializer: QueryValuesSerializer\n}\n\nexport class HttpClient {\n    private readonly config: HttpClientConfig\n    constructor(configOverrides: Partial<HttpClientConfig> = {}) {\n        this.config = {\n            ...this.defaultConfig(),\n            ...configOverrides,\n        }\n    }\n    public request<Dto>(config: HttpRequestConfig): Observable<HttpResponse<Dto>> {\n        let url = config.url\n        const query =\n            config.queryParams && queryString(config.queryParams, this.config.querySerializer)\n\n        if (query) {\n            url = `${url}?${query}`\n        }\n        return fromFetch(url, { method: config.method }).pipe(\n            switchMap(response => {\n                return this.handleFetchResponse<Dto>(response, config)\n            })\n        )\n    }\n\n    private async handleFetchResponse<Dto>(\n        fetchResponse: Response,\n        config: HttpRequestConfig\n    ): Promise<HttpResponse<Dto>> {\n        const respPartial = pick(fetchResponse, FETCH_RESPONSE_USEFUL_KEYS)\n        if (!fetchResponse.ok) {\n            throw new HttpError(config, {\n                ...respPartial,\n                body: null,\n                fetchResponse: fetchResponse,\n            })\n        }\n        const data = await fetchResponse.json()\n        const resp: HttpResponse<Dto> = {\n            ...respPartial,\n            body: data,\n            fetchResponse: fetchResponse,\n        }\n        if (fetchResponse.status >= 400) {\n            throw new HttpError(config, resp)\n        }\n        return resp\n    }\n\n    private defaultConfig(): HttpClientConfig {\n        return {\n            querySerializer: DEFAULT_SERIALIZER,\n        }\n    }\n}\n","export function pick<T extends object, K extends keyof T>(\n    obj: T,\n    keys: ReadonlyArray<K>\n): Pick<T, K> {\n    return keys.reduce((result, key) => {\n        result[key] = obj[key]\n        return result\n    }, {} as Pick<T, K>)\n}\n","import { GithubUserDto } from './github-api.types'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { httpBackend } from 'api/common/http-backend'\n\nexport const githubApiClient = {\n    getProfile,\n}\n\nfunction getProfile(username: string): Observable<GithubUserDto> {\n    return httpBackend\n        .request<GithubUserDto>({\n            method: 'GET',\n            url: `https://api.github.com/users/${username}`,\n        })\n        .pipe(map(({ body }) => body))\n}\n","import { StateSlice, storeSlice } from 'common/redux/reducer-utils'\nimport { shouldNeverBeCalled } from 'common/utils/misc'\nimport { AuthAction } from './auth.actions'\n\nexport interface AuthState {\n    apiToken: string\n}\n\nconst initialState: AuthState = {\n    apiToken: '',\n}\n\nexport type AuthStateSlice = StateSlice<typeof authReducerSlice>\n\nexport const authReducerSlice = storeSlice('auth', initialState).withReducer<AuthAction>(\n    (state, action) => {\n        switch (action.type) {\n            case '@auth.login':\n                return {\n                    ...action.payload,\n                }\n            case '@auth.logout':\n                return {\n                    apiToken: '',\n                }\n\n            default:\n                shouldNeverBeCalled(action)\n        }\n        return state\n    }\n)\n","export type ApiUrlParts = ReadonlyArray<number | string>\n\nconst REDUNDANT_SLASH_RE = /([^:])\\/\\//g\nexport function apiUrl(urlParts: ApiUrlParts): string {\n    return urlParts.join('/').replaceAll(REDUNDANT_SLASH_RE, '$1/')\n}\n","import { httpBackend } from 'api/common/http-backend'\nimport { apiUrl, ApiUrlParts } from 'common/api/api-utils'\nimport { HttpClient } from 'common/http/http-client'\nimport { HttpRequestConfig, HttpResponse } from 'common/http/http-client.types'\nimport { Observable } from 'rxjs'\n\nexport interface ApiClientRequestConfig {\n    method: HttpRequestConfig['method']\n    urlParts: Array<string | number>\n    queryParams?: HttpRequestConfig['queryParams']\n    body?: HttpRequestConfig['body']\n}\n\nconst TOKEN_PLACEHOLDER = '{token}'\n\nexport interface ApiClientBackendOptions {\n    httpBackend: HttpClient\n    /** string which should contain \"{token}\" placeholder which will be replace with auth token */\n    endpointTemplate: string\n}\n\nexport class ApiClientBackend {\n    private token = ''\n\n    constructor(private readonly options: ApiClientBackendOptions) {}\n\n    public updateToken(token: string): void {\n        this.token = token\n    }\n\n    public request<T>(config: ApiClientRequestConfig): Observable<HttpResponse<T>> {\n        return this.options.httpBackend.request({\n            method: config.method,\n            url: this.url(config.urlParts),\n            queryParams: config.queryParams,\n            body: config.body,\n        })\n    }\n\n    public url(urlParts: ApiUrlParts): string {\n        return apiUrl([this.endpoint(), ...urlParts])\n    }\n\n    private endpoint(): string {\n        return this.options.endpointTemplate.replace(TOKEN_PLACEHOLDER, this.token)\n    }\n}\n\nexport const apiClientBackend = new ApiClientBackend({\n    httpBackend,\n    endpointTemplate: 'https://{token}.mockapi.io/api/v1',\n})\n","import { apiClientBackend } from 'api/pizza-store/common/api-client-backend'\nimport { shouldNeverBeCalled } from 'common/utils/misc'\nimport { Epic, ofType } from 'redux-observable'\nimport { merge, NEVER } from 'rxjs'\nimport { switchMap } from 'rxjs/operators'\nimport { AuthAction } from './auth.actions'\n\nexport const authEpic: Epic<AuthAction> = action$ => {\n    const handleAuthChanges$ = action$.pipe(\n        ofType('@auth.login', '@auth.logout'),\n        switchMap(action => {\n            switch (action.type) {\n                case '@auth.login':\n                    apiClientBackend.updateToken(action.payload.apiToken)\n                    break\n                case '@auth.logout':\n                    apiClientBackend.updateToken('')\n                    break\n                default:\n                    shouldNeverBeCalled(action)\n            }\n            return NEVER\n        })\n    )\n    const restoreAuthToken$ = NEVER\n\n    return merge(handleAuthChanges$, restoreAuthToken$)\n}\n","import { ApiListDto } from 'api/pizza-store/common/api.types'\nimport { UserDto } from 'api/pizza-store/user/user-client.types'\nimport { StateSlice, storeSlice } from 'common/redux/reducer-utils'\nimport { shouldNeverBeCalled } from 'common/utils/misc'\nimport { UsersListAction } from './users-list.actions'\n\nexport const DEFAULT_GITHUB_USERNAME = 'rodmax'\nexport interface UsersListState {\n    users: ApiListDto<UserDto> | null\n    isLoading: boolean\n    error: unknown\n}\n\nconst initialState: UsersListState = {\n    users: null,\n    isLoading: false,\n    error: null,\n}\n\nexport type UsersListStateSlice = StateSlice<typeof usersListReducerSlice>\n\nexport const usersListReducerSlice = storeSlice('usersList', initialState).withReducer(\n    (state, action: UsersListAction) => {\n        switch (action.type) {\n            case '@usersList.loadStart':\n                return {\n                    ...state,\n                    isLoading: true,\n                }\n\n            case '@usersList.loadSuccess':\n                return { ...state, isLoading: false, users: action.payload }\n\n            case '@usersList.loadError':\n                return { ...state, isLoading: false, error: action.payload }\n\n            default:\n                shouldNeverBeCalled(action)\n        }\n        return state\n    }\n)\n","import { HttpResponse } from 'common/http/http-client.types'\n\nexport function responseToBody<B>(response: HttpResponse<B>): B {\n    return response.body\n}\n","import { HttpResponse } from 'common/http/http-client.types'\nimport { Observable } from 'rxjs'\nimport { map } from 'rxjs/operators'\nimport { apiClientBackend, ApiClientRequestConfig } from './api-client-backend'\nimport { responseToBody } from './api-mappers'\nimport { ApiAnyId, ApiListDto } from './api.types'\n\nexport interface ApiClientOptions {\n    resourceUrl: string\n}\nexport class ApiClient<Dto = never> {\n    constructor(private readonly options: ApiClientOptions) {}\n\n    public create<T = Dto>(body: ApiClientRequestConfig['body']): Observable<T> {\n        return this.request<T>({\n            method: 'POST',\n            urlParts: [],\n            body,\n        }).pipe(map(responseToBody))\n    }\n\n    public update<T = Dto>(id: ApiAnyId, body: ApiClientRequestConfig['body']): Observable<T> {\n        return this.request<T>({\n            method: 'PUT',\n            urlParts: [id],\n            body,\n        }).pipe(map(responseToBody))\n    }\n\n    public search<T = Dto>(\n        queryParams: ApiClientRequestConfig['queryParams']\n    ): Observable<ApiListDto<T>> {\n        return this.request<ApiListDto<T>>({\n            method: 'GET',\n            urlParts: [],\n            queryParams,\n        }).pipe(map(responseToBody))\n    }\n\n    public request<T>(config: ApiClientRequestConfig): Observable<HttpResponse<T>> {\n        return apiClientBackend.request({\n            ...config,\n            urlParts: [this.options.resourceUrl, ...config.urlParts],\n        })\n    }\n}\n","import { Observable } from 'rxjs'\nimport { ApiClient } from '../common/api-client'\nimport { ApiListDto } from '../common/api.types'\nimport { UserDto, UserSearchParams } from './user-client.types'\n\nexport class UserClient {\n    private readonly client = new ApiClient({\n        resourceUrl: '/users',\n    })\n\n    public search(queryParams: UserSearchParams): Observable<ApiListDto<UserDto>> {\n        return this.client.search(queryParams)\n    }\n}\n\nexport const userClient = new UserClient()\n","import { storeFactory } from 'common/redux/store-utils'\nimport { githubProfileReducerSlice } from 'modules/github/pages/github-profile-page/state/github-profile.reducer'\nimport { githubProfileFetchDataEpic } from 'modules/github/pages/github-profile-page/state/github-profile.epics'\nimport { authReducerSlice } from 'modules/auth/model/auth.reducer'\nimport { authEpic } from 'modules/auth/model/auth.epics'\nimport { usersListReducerSlice } from 'modules/user/pages/users-list-page/state/users-list.reducer'\nimport { usersListEpic } from 'modules/user/pages/users-list-page/state/users-list.epics'\n\nexport const appStore = storeFactory({\n    reducers: {\n        ...githubProfileReducerSlice,\n        ...authReducerSlice,\n        ...usersListReducerSlice,\n    },\n    epics: [githubProfileFetchDataEpic, authEpic, usersListEpic],\n    enabledDevTools: true,\n})\n","/// <reference types=\"./redux-observable.patch\" />\n\nimport { combineReducers, createStore, applyMiddleware, ReducersMapObject, Action } from 'redux'\nimport { createEpicMiddleware, combineEpics, Epic } from 'redux-observable'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any -- quick fix to make TS happy\ntype BaseReducerObject = ReducersMapObject<any, any>\n\ninterface StoreOptions<M extends BaseReducerObject> {\n    reducers: M\n    epics: Array<Epic>\n    enabledDevTools?: boolean\n}\n\nexport const storeFactory = <M extends BaseReducerObject>(options: StoreOptions<M>) => {\n    options = {\n        enabledDevTools: false,\n        ...options,\n    }\n\n    return () => {\n        const reducer = combineReducers(options.reducers)\n\n        const epicMiddleware = createEpicMiddleware<Action>()\n        let enhancer = applyMiddleware(epicMiddleware)\n        if (options.enabledDevTools) {\n            enhancer = composeWithDevTools(enhancer)\n        }\n        const store = createStore(reducer, enhancer)\n        epicMiddleware.run(combineEpics(...options.epics))\n        return store\n    }\n}\n","import { Epic, ofType } from 'redux-observable'\nimport { switchMap, map } from 'rxjs/operators'\nimport { githubApiClient } from 'api/github/github-api.client'\nimport { GithubProfileAction, githubProfileActions } from './github-profile.actions'\n\nexport const githubProfileFetchDataEpic: Epic<GithubProfileAction> = action$ => {\n    return action$.pipe(\n        ofType('@githubProfile.loadStart'),\n        switchMap(action => {\n            return githubApiClient.getProfile(action.payload.username).pipe(\n                map(userDto => {\n                    return githubProfileActions.loadSuccess(userDto)\n                })\n            )\n        })\n    )\n}\n","import { Epic, ofType } from 'redux-observable'\nimport { switchMap, map } from 'rxjs/operators'\nimport { UsersListAction, usersListActions } from './users-list.actions'\nimport { userClient } from 'api/pizza-store/user/user-client'\n\nexport const usersListEpic: Epic<UsersListAction> = action$ => {\n    return action$.pipe(\n        ofType('@usersList.loadStart'),\n        switchMap(() => {\n            return userClient.search({ limit: 10, page: 1, orderBy: 'asc', sortBy: 'name' }).pipe(\n                map(usersList => {\n                    return usersListActions.loadSuccess(usersList)\n                })\n            )\n        })\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport { App } from 'app/app'\nimport { Provider } from 'react-redux'\nimport { RouterProvider } from 'react-router5'\nimport { appStore } from 'app/app-store'\nimport { createAppRouter } from 'app/router/router'\n\nconst router = createAppRouter()\n\nrouter.start()\n\nReactDOM.render(\n    <React.StrictMode>\n        <RouterProvider router={router}>\n            <Provider store={appStore()}>\n                <App></App>\n            </Provider>\n        </RouterProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n","import React from 'react'\nimport { MainLayout } from './main-layout/main-layout'\n\nexport const App: React.FunctionComponent = () => {\n    return <MainLayout></MainLayout>\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = function(module) {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: function() {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t826: 0\n};\n\nvar deferredModules = [\n\t[6588,736]\n];\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\nvar checkDeferredModules = function() {\n\n};\nfunction checkDeferredModulesImpl() {\n\tvar result;\n\tfor(var i = 0; i < deferredModules.length; i++) {\n\t\tvar deferredModule = deferredModules[i];\n\t\tvar fulfilled = true;\n\t\tfor(var j = 1; j < deferredModule.length; j++) {\n\t\t\tvar depId = deferredModule[j];\n\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferredModules.splice(i--, 1);\n\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n\t\t}\n\t}\n\tif(deferredModules.length === 0) {\n\t\t__webpack_require__.x();\n\t\t__webpack_require__.x = function() {\n\n\t\t}\n\t}\n\treturn result;\n}\n__webpack_require__.x = function() {\n\t// reset startup function so it can be called again when more startup code is added\n\t__webpack_require__.x = function() {\n\n\t}\n\tchunkLoadingGlobal = chunkLoadingGlobal.slice();\n\tfor(var i = 0; i < chunkLoadingGlobal.length; i++) webpackJsonpCallback(chunkLoadingGlobal[i]);\n\treturn (checkDeferredModules = checkDeferredModulesImpl)();\n};\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tvar executeModules = data[3];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tparentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n\t// add entry modules from loaded chunk to deferred list\n\tif(executeModules) deferredModules.push.apply(deferredModules, executeModules);\n\n\t// run deferred modules when all chunks ready\n\treturn checkDeferredModules();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkreact_playground\"] = self[\"webpackChunkreact_playground\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = webpackJsonpCallback;","// run startup\nreturn __webpack_require__.x();\n"],"sourceRoot":""}